version: "3.8"

services:
  db:
    image: postgres:17
    environment:
    - POSTGRES_DB=${POSTGRES_DB}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5433"
    networks:
      - app-network

  frontend:
    build:
      context: ./LocalPay
    volumes:
      - react_build:/LocalPay/build
    ports:
      - "3000:3000"


  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/localpay
    ports:
      - "6433:6432"
    depends_on:
      - db

    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./userlist.txt:/etc/pgbouncer/userlist.txt:ro

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      bash -c "python manage.py makemigrations &&
                python manage.py migrate &&
                python manage.py collectstatic --noinput &&
                gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 10000 --limit-request-field_size 16384 --workers 2"

    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - db
      - pgbouncer
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DEBUG=${DEBUG}
    networks:
      - app-network
    env_file:
      - .env
    


  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"

    depends_on:
      - web
    networks:
      - app-network
      
  
  filebeat:
    image: elastic/filebeat:8.15.2
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/app/logs:ro
    command: ["filebeat", "-e", "--strict.perms=false"]
    environment:
      - strict.perms=false
    networks:
      - app-network


volumes:
  postgres_data:
  static_volume:
  react_build:


networks:
  app-network:
    driver: bridge
