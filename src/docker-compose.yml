version: "3.8"

services:
  db:
    image: postgres:16
    environment:
    - POSTGRES_DB=${POSTGRES_DB} 
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  frontend:
    build:
      context: ./LocalPay
    volumes:
      - react_build:/LocalPay/build
    ports:
      - "3000:3000"


  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/localpay
    ports:
      - "6433:6432"
    depends_on:
      - db

    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./userlist.txt:/etc/pgbouncer/userlist.txt:ro

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      bash -c "python manage.py makemigrations &&
                python manage.py migrate &&
                python manage.py collectstatic --noinput &&
                gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 10000 --limit-request-field_size 16384 --workers 2"

    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DEBUG=${DEBUG}
    networks:
      - app-network


  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"

    depends_on:
      - web
    networks:
      - app-network
  
  filebeat:
    image: elastic/filebeat:8.15.2
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .:/app:ro
      - ./logs:/var/log/filebeat:ro
      - ./logs/monitoring:/var/log/filebeat/monitoring
    command: filebeat -e -strict.perms=false
    environment:
      - strict.perms=false
    networks:
      - app-network

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.10.0
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - elasticsearch


  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.10.0
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro

  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m" # Ограничиваем использование памяти
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - elasticsearch

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - xpack.security.enabled=false

  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es_data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #   networks:
  #     - app-network



volumes:
  # es_data:
  postgres_data:
  static_volume:
  react_build:


networks:
  app-network:
    driver: bridge
